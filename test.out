struct i{
    int x;
    int y;
};

bool B;
struct a{
    int x;
    int y;
};

int function() {
}

struct b{
    int i;
    int z;
    int b;
    struct a a1;
};

bool func(int a, int b, int c) {
}

int func1;
bool xyz() {
}

struct b final;
bool func3() {
    int func3;
    final(b).z(int)++;
}

int func2(int d, int e, int f) {
    int i;
    bool bo;
    int c;
    struct a a1;
    struct b b1;
    c(int) = a1(a).x(int);
    c(int) = (a1(a).x(int) + a1(a).y(int));
    c(int) = (a1(a).x(int) * a1(a).y(int));
    c(int) = (!b1(b).z(int));
    c(int) = (b1(b).a1(a).x(int) - b1(b).b(int));
    c(int) = (b1(b).a1(a).x(int) / b1(b).b(int));
    cout << a(struct);
    cin >> a1(a).x(int);
    cin >> b1(b).a1(a).x(int);
    if (((a(struct) > a1(a).y(int)) && (b1(b).a1(a).x(int) >= b1(b).a1(a).y(int)))) {
        int a;
        int b;
        int a1;
        final(b).a1(a).x(int)++;
    }
    if (((a(struct) > a1(a).y(int)) && (b1(b).a1(a).x(int) >= b1(b).a1(a).y(int)))) {
        int b;
        struct a a2;
        a2(a).x(int)++;
    }
    repeat (c(int)) {
        int b1;
    }
    return;
    func3(->bool)();
}

