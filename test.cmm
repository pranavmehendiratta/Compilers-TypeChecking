struct P {
    int x;
    int y;
};

struct P1 {
    int x;
    int y;
};

void func() {
    struct P point;
    int a;
    bool b;
    cout << a;
    cout << b;
    cout << point; // Should throw an error
    cin >> a;
    cin >> b;
    cin >> point; // Should throw an error
    
    if (b) {
	cout << a;
	cout << b;
    }

    if (b >= 3) {
	cout << a;
	cout << b;
    }
   
    if (b) {
	cout << a;
	cout << b;
	cout << point; // Should throw an error
    } else {
	cout << a;
	cout << b;
	cout << point; // Should throw an error
    }

    while (b) {
	cout << a;
	cout << b;
    }

    while (b >= 3) {
	cout << a;
	cout << b;
    }
    
    repeat (a) {
	cout << a;
	cout << b;
    }

    repeat (b) {
	cout << a;
	cout << b;
    }
    a++;
    b++; // incrementing bool

    return;
    return a;
}

int f1() {
    int a;
    return a;
}

int f3(int x, int y) {
    cout << x;    
}

int f2() {
    bool b;
    int a;
    int c;
    struct P point1;
    struct P1 point2;
    
    
    b = true;
    a = 1;
    a = b;
    f1 = func;
    P = P1;
    point1 = point2;
    
    f3(a, b);
    
    cout << a + b;
    
    return b;
}


